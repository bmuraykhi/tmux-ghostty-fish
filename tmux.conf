# Core settings
set -g focus-events on
set -g default-terminal "screen-256color"
set -g base-index 1
set -g pane-base-index 1
set -g history-limit 10000
set -g mode-keys vi
set -g status-keys vi
set -g escape-time 0
set -g repeat-time 251
set -g mouse on
set -g wrap-search off

# Tokyo Night theme
set -g status-position bottom
set -g status-style "bg=default,fg=#7aa2f7"
set -g status-justify centre
set -g status-left "#[fg=#bb9af7,bold] #S "
set -g status-right "#[fg=#7dcfff] %H:%M #[fg=#bb9af7] %d-%b-%y "
set -g message-style "bg=#1a1b26,fg=#c0caf5"
set -g window-status-format "#[fg=#565f89] #I #W "
set -g window-status-current-format "#[fg=#7aa2f7,bold] #I #W "
set -g pane-border-style "fg=#414868"
set -g pane-active-border-style "fg=#7aa2f7"
set -g mode-style "bg=#3b4261,fg=#c0caf5"

# Prefix and basic bindings
set -g prefix C-space
bind C-space send-prefix
bind c new-window -c "#{pane_current_path}"
unbind -T prefix Space

# Vi-style navigation and copy mode
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

bind % run-shell '
    find_ssh() {
        local pid=$1
        local cmd=$(ps -o command= -p "$pid" 2>/dev/null | grep "^ssh ")
        if [ -n "$cmd" ]; then
            echo "$cmd"
            return
        fi
        for child in $(pgrep -P "$pid" 2>/dev/null); do
            result=$(find_ssh "$child")
            if [ -n "$result" ]; then
                echo "$result"
                return
            fi
        done
    }
    pid=$(tmux display-message -p "#{pane_pid}")
    ssh=$(find_ssh "$pid")
    if [ -n "$ssh" ]; then
        tmux split-window -h -c "#{pane_current_path}" "fish -c \"$ssh; exec fish\""
    else
        tmux split-window -h -c "#{pane_current_path}"
    fi
'

bind \" run-shell '
    find_ssh() {
        local pid=$1
        local cmd=$(ps -o command= -p "$pid" 2>/dev/null | grep "^ssh ")
        if [ -n "$cmd" ]; then
            echo "$cmd"
            return
        fi
        for child in $(pgrep -P "$pid" 2>/dev/null); do
            result=$(find_ssh "$child")
            if [ -n "$result" ]; then
                echo "$result"
                return
            fi
        done
    }
    pid=$(tmux display-message -p "#{pane_pid}")
    ssh=$(find_ssh "$pid")
    if [ -n "$ssh" ]; then
        tmux split-window -v -c "#{pane_current_path}" "fish -c \"$ssh; exec fish\""
    else
        tmux split-window -v -c "#{pane_current_path}"
    fi
'
